
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" style=""overflow:auto"">
<head id="ctl00_Head"><link id="ctl00_HeaderLink2" rel="stylesheet" type="text/css" href="http://i3.msdn.microsoft.com/Platform/MasterPages/Msdn10/Msdn10a-bn1651.css" /><link id="ctl00_HeaderLink3" rel="stylesheet" type="text/css" href="http://i3.msdn.microsoft.com/Platform/MasterPages/MsdnMagazine2/Magazine2-bn1651.css" /><link rel="alternate" type="application/rss+xml" title="MSDN Magazine - Current Issue" href="/magazine/rss/default.aspx?z=z&amp;iss=1" /><link rel="alternate" type="application/rss+xml" title="MSDN Magazine - Complete" href="/magazine/rss/default.aspx?z=z&amp;all=1" /><link rel="alternate" type="application/rss+xml" title="MSDN Magazine Blog" href="http://blogs.msdn.com/msdnmagazine/rss.xml" /><link rel="stylesheet" type="text/css" href="http://i3.msdn.microsoft.com/Platform/MasterPages/Msdn10/Msdn10.ie8-bn1651.css" /><meta name="NormalizedUrl" content="http://msdn.microsoft.com/en-us/magazine(d=default)/cc164135(l=en-us,v=MSDN.10).aspx" /><meta name="VotingContextUrl" content="http://msdn.microsoft.com/en-us/magazine(d=default)/cc164135(l=en-us,v=MSDN.10).aspx" /><meta name="ROBOTS" content="NOINDEX,NOFOLLOW" /><meta name="MN" content="8D785B93-7:39:51 AM" /><meta name="ms.locale" content="en-us" /><meta name="Search.ShortId" content="cc164135" />
<!-- Looking for metadata? Use the robot view instead http://currentsite/currenturl(robot).aspx -->
<link rel="stylesheet" type="text/css" href="http://i3.msdn.microsoft.com/en-us/magazine/mtps-bn1651.css?l=en-us&amp;i=magazine&amp;ct=AlternateSelector;CCEditor;CCSection;CCTagEditor;CodeSnippet;CollapsibleArea;ContentFallback;EyebrowSimple;FeedViewerBasic;InstrumentedLink;InteractiveToolbar;MtpsRating;MtViewDropDown;Omniture;RedVelvetCodeSnippet;RedVelvetCollapsibleArea;RedVelvetInstrumentedLink;StoFooter;StoLocaleManagementFlyout;StoMastheadMSDN;StoMtpsLoginStatus;StoProfileLink;StoSearch;StoTabStrip;SurveyLauncher;TemplatedFlyout;TransWikiPopupEditor;WebMetrix;WebTrends&amp;clustimg=1"></link><link rel="alternate" media="print" href="/en-us/magazine/cc164135(printer).aspx" />
<title>
	The XML Files: Advanced Type Mappings
</title></head>
<body id="ctl00_MTPS_Body" class="MsdnPageBody" dir="ltr">
    <form name="aspnetForm" method="post" action="cc164135.aspx" id="aspnetForm">
<div>
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUBMGQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFImN0bDAwJE1hc3RoZWFkJFNlYXJjaCRTZWFyY2hCdXR0b24lmakQCE49nay/Oh+qSjeDZiRv+Q==" />
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<script src="/WebResource.axd?d=gsh4eaEpbqoI5rlVwNE2DbDoIdnrDSCspNtkZQ_l6sjxq6mYmO8OgwDZ305rbhUDj4_l7H-VRBll3bzFIeDFEQNjgG81&amp;t=634499041268305488" type="text/javascript"></script>


<script type="text/javascript">
//<![CDATA[
var CurUserId="AxUFAAAAAADFBwAAg3FQSHJA3U4DG9aEaYg+3Q!!";var ClientURL="http%3a%2f%2fmsdn.microsoft.com%2fen-us%2fmagazine(d%3ddefault)%2fcc164135(l%3den-us%2cv%3dMSDN.10).aspx";var maxRating=5;var RatingObjId="ctl00_tb1_Flyout_Rating1";var tbCommentsId="ctl00_tb1_Flyout_tbComments";var PageId="cc164135";var pageTag="contentRatingcc164135MSDN.10en-us";var sendBtnId="ctl00_tb1_Flyout_btnSend";var curRating="0";var contentRated=false;var RatingTooltipText="Click a star and provide feedback";var RatedTooltipText="You have already rated this content. Thank you for your feedback.";var userIPAddress="199.64.72.252";var MtpsPageDirection="ltr";var RatingFlyoutID="ctl00_tb1_Flyout";var Rating_Device="default";//]]>
</script>

<script src="http://i2.msdn.microsoft.com/Platform/cjs/jquery-1.2.6-bn1651.js" type="text/javascript"></script>
<script src="http://i2.msdn.microsoft.com/Platform/cjs/Silverlight-bn1651.js" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
var wt_nvr_ru = "WT_NVR_RU";var wt_fpcdom = ".microsoft.com";var wt_domlist = "msdn.microsoft.com";var wt_pathlist = "";var wt_paramlist = "DCSext.mtps_devcenter";var wt_siteid = "MSDN";var gDomain="m.webtrends.com";
var gDcsId="dcsmgru7m99k7mqmgrhudo0k8_8c6m";
var gFpc="WT_FPC";
/*<![CDATA[*/
if(document.cookie.indexOf(gFpc+"=")==-1){document.write("<scr"+"ipt type='text/javascript' src='"+"http"+(window.location.protocol.indexOf('https:')==0?'s':'')+"://"+gDomain+"/"+gDcsId+"/wtid.js"+"'><\/scr"+"ipt>");}
/*]]>*/
var detectedLocale = 'en-us';
var wtsp="_msdnmag_";
var gTrackEvents = 1;
var omni_guid='15803446-aead-477f-a869-7e1a8df339a5';//]]>
</script>
<script src='http://i2.msdn.microsoft.com/Platform/Controls/Omniture/resources/MSDN/omni_rsid_msdn-bn1651.js' type='text/javascript'></script><noscript><a href='http://www.omniture.com' title='Web Analytics'><img src='http://msstonojsmsdn.112.2o7.net/b/ss/msstonojsmsdn/1/H.20.2--NS/0'  height='1' width='1' border='0' alt='' /></a></noscript>
<script type="text/javascript">
//<![CDATA[
$(document).ready(function() { var sf = "a[@rel$='sitefeedback']"; if ($(sf) == null) return;  $(sf).click(function() {   var t = $(this).attr('targetUrl');   window.open(t,'SiteFeedback','width=670,resizable=no,height=700,toolbar=no,location=no,scrollbars=yes,directories=no,status=no,menubar=no'); return false; }); });//]]>
</script>

<script src="http://i2.msdn.microsoft.com/platform/cjs/extract/compositejscript3.js" type="text/javascript"></script>
    <script type="text/javascript">
//<![CDATA[
Sys.WebForms.PageRequestManager._initialize('ctl00$ScriptManager1', 'aspnetForm', [], [], [], 90, 'ctl00');
//]]>
</script>

    <div id="ctl00_checkFlyer">

</div>
    
    
    <div id="BodyBackground">
        <div id="ctl00_JelloSizer" class="JelloSizer">
            <div id="JelloExpander">
                <div id="ctl00_JelloWrapper" class="JelloWrapper">
                    <div class="Clear"> </div>
                    
                        <div class="Clear"> </div>
                        

<div class="Masthead">
    <div id="ctl00_Masthead_brandLogo" class="BrandLogo">
        <a href="/en-us/magazine/default.aspx" id="ctl00_Masthead_brandlink" title="MSDN Magazine">MSDN Magazine</a>
    </div>
    <div class="Search">
        <div id="ctl00_Masthead_Search_SearchBox" class="SearchBox">
    <input name="ctl00$Masthead$Search$SearchTextBox" type="text" id="ctl00_Masthead_Search_SearchTextBox" title="Search MSDN" class="TextBoxSearch" />
    <input type="image" name="ctl00$Masthead$Search$SearchButton" id="ctl00_Masthead_Search_SearchButton" title="Click here to search" class="SearchButton" alt="Click here to search" src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style="border-width:0px;" />
    <span class="Bing"></span>
<script type="text/javascript" defer="defer" src="http://i4.services.social.microsoft.com/search/Widgets/SearchBox.jss?boxid=ctl00_Masthead_Search_SearchTextBox&btnid=ctl00_Masthead_Search_SearchButton&brand=MSDN&loc=en-us&focusOnInit=true&Refinement=118&watermark=MSDN Magazine" id="mscom.srch.searchBox"></script></div>
    </div>
    <div class="GlobalBar">
        <div id="ctl00_Masthead_passportScarab" class="PassportScarab"> 
            <a id="idPPScarab" href="https://login.live.com/login.srf?wa=wsignin1.0&amp;rpsnv=11&amp;ct=1321889991&amp;rver=6.0.5276.0&amp;wp=MCLBI&amp;wlcxt=msdn%24msdn%24msdn&amp;wreply=http:%2F%2Fmsdn.microsoft.com%2Fen-us%2Fmagazine%2Fcc164135.aspx&amp;lc=1033&amp;cb=&amp;id=254354" ><span id="idPPScarabSIT" class="MTPS_GlobalToolbarLinks_msdn">Sign in</span></a>
<div id="idPPMWOverlay" style="display: none;"></div>
        </div>
        <div class="LocaleFlyout">
            
    <div id="MainDiv"  onmouseover="FlyoutPopupShow()"  onmouseout="FlyoutPopupHide()">
        <div id="FlyoutTop" >
            <a id="ctl00_Masthead_LocaleManagement_linkCountryLanguage" class="LocaleManagementFlyoutStaticLink">United States - English&nbsp;</a>
            <img id="img_Arrow" class="LocaleManagementFlyoutPopArrow" src="http://i.msdn.microsoft.com/Global/Images/clear.gif" alt="choose your country or language"/>
        </div>
        <div id="FlyoutPopup"  class="LocaleManagementFlyoutPopup">
            <table class="LocaleManagementFlyoutPopupTable"  >
                <tr><td ><a id="ctl00_Masthead_LocaleManagement_lkbtn_Arg" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Arg&#39;,&#39;&#39;)">
                Argentina (Español)</a></td></tr>
                <tr><td ><a id="ctl00_Masthead_LocaleManagement_lkbtn_Bra" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Bra&#39;,&#39;&#39;)">
                Brasil (Português)</a></td></tr>
                <tr><td ><a id="ctl00_Masthead_LocaleManagement_lkbtn_CanE" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_CanE&#39;,&#39;&#39;)">
                Canada (English)</a></td></tr>
                <tr><td ><a id="ctl00_Masthead_LocaleManagement_lkbtn_CanF" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_CanF&#39;,&#39;&#39;)">
                Canada (Français)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Chi" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Chi&#39;,&#39;&#39;)">
                中国 (简体中文)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Col" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Col&#39;,&#39;&#39;)">
                Colombia (Español)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Deu" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Deu&#39;,&#39;&#39;)">
                Deutschland (Deutsch)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Esp" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Esp&#39;,&#39;&#39;)">
                España (Español)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Fra" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Fra&#39;,&#39;&#39;)">
                France (Français)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Ind" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Ind&#39;,&#39;&#39;)">
                India (English)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Ita" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Ita&#39;,&#39;&#39;)">
                Italia (Italiano)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Jpa" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Jpa&#39;,&#39;&#39;)">
                日本 (日本語)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Kor" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Kor&#39;,&#39;&#39;)">
                한국 (한국어)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Mex" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Mex&#39;,&#39;&#39;)">
                México (Español)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Per" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Per&#39;,&#39;&#39;)">
                Perú (Español)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Рос" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Рос&#39;,&#39;&#39;)">
                Россия (Pусский)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_Tai" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_Tai&#39;,&#39;&#39;)">
                台灣 (繁體中文)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_UK" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_UK&#39;,&#39;&#39;)">
                United Kingdom (English)</a></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_US" href="javascript:__doPostBack(&#39;ctl00$Masthead$LocaleManagement$lkbtn_US&#39;,&#39;&#39;)">
                United States (English)</a></td></tr>
                <tr><td class="LocaleManagementFlyoutPopupHr"></td></tr>
                <tr><td><a id="ctl00_Masthead_LocaleManagement_lkbtn_More" href="/en-us/ms376822.aspx">More...</a></td></tr>
            </table>
        </div>
    </div>


        </div>
        <div class="Clear"></div>
        <div id="ctl00_Masthead_ProfileLink_UserName" class="UserName"></div>
    </div>
    <div class="Clear"></div>
    <div id="ctl00_Masthead_networkTagLineArea" class="NetworkLogo">
        <a href="/en-us/default.aspx" id="ctl00_Masthead_networkLink"><img title="microsoft developer network" src="http://i.msdn.microsoft.com/Platform/Controls/StoMastheadMSDN/resources/brand_logo.png" style="border-width:0px;" /></a>
    </div>
    

<div class="leftcap"></div>
    <div class="internav">
	    <div id="ctl00_Masthead_tabs_manTabsHolder"><a id="ctl00_Masthead_tabs_ctl01" class="normal" href="http://msdn.microsoft.com/en-us/magazine/default.aspx" onclick="javascript:Track('|TabStrip Link|ctl00_Masthead_tabs_ctl00|ctl00_Masthead_tabs_ctl01',this);">Home</a><a id="ctl00_Masthead_tabs_ctl03" class="normal" href="http://msdn.microsoft.com/en-us/magazine/ee532082.aspx" onclick="javascript:Track('|TabStrip Link|ctl00_Masthead_tabs_ctl02|ctl00_Masthead_tabs_ctl03',this);">Topics</a><a id="ctl00_Masthead_tabs_ctl05" class="active" href="http://msdn.microsoft.com/en-us/magazine/ee310108.aspx" onclick="javascript:Track('|TabStrip Link|ctl00_Masthead_tabs_ctl04|ctl00_Masthead_tabs_ctl05',this);">Issues</a><a id="ctl00_Masthead_tabs_ctl07" class="normal" href="http://msdn.microsoft.com/en-us/magazine/ee532401.aspx" onclick="javascript:Track('|TabStrip Link|ctl00_Masthead_tabs_ctl06|ctl00_Masthead_tabs_ctl07',this);">Columns</a><a id="ctl00_Masthead_tabs_ctl09" class="normal" href="http://msdn.microsoft.com/en-us/magazine/ee532399.aspx" onclick="javascript:Track('|TabStrip Link|ctl00_Masthead_tabs_ctl08|ctl00_Masthead_tabs_ctl09',this);">Downloads</a><a id="ctl00_Masthead_tabs_ctl11" class="normal" href="http://msdn.microsoft.com/en-us/magazine/ee358702.aspx" onclick="javascript:Track('|TabStrip Link|ctl00_Masthead_tabs_ctl10|ctl00_Masthead_tabs_ctl11',this);">Subscribe</a><a id="ctl00_Masthead_tabs_ctl13" class="normal" href="http://msdn.microsoft.com/en-us/magazine/ee291618.aspx" onclick="javascript:Track('|TabStrip Link|ctl00_Masthead_tabs_ctl12|ctl00_Masthead_tabs_ctl13',this);">Contact Us</a></div>
    </div>
<div class="rightcap"></div>
<div class="Clear"></div>
   
</div>
                        <div class="Clear"> </div>
                        <div class="topleftcorner"> </div>
                        <div class="toprightcorner"> </div>
                        <div class="alley">
                            <div class="wrapper">
                                <div class="inner">
                                    
                                    <div class="Clear"> </div>
                                    <div id="ctl00_EyebrowMenu_EyebrowContainer" class="EyebrowContainer"><a id="ctl00_EyebrowMenu_ctl00" title="MSDN Magazine" class="EyebrowLink" href="http://msdn.microsoft.com/en-us/magazine/dd767791.aspx" onclick="javascript:Track('|Eyebrow|ctl00_EyebrowMenu_EyebrowContainer|ctl00_EyebrowMenu_ctl00',this);">MSDN Magazine</a><span>&nbsp;&gt;&nbsp;</span><a id="ctl00_EyebrowMenu_ctl01" title="Issues" class="EyebrowLink" href="http://msdn.microsoft.com/en-us/magazine/ee310108.aspx" onclick="javascript:Track('|Eyebrow|ctl00_EyebrowMenu_EyebrowContainer|ctl00_EyebrowMenu_ctl01',this);">Issues</a><span>&nbsp;&gt;&nbsp;</span><a id="ctl00_EyebrowMenu_ctl02" title="2003" class="EyebrowLink" href="http://msdn.microsoft.com/en-us/magazine/cc135857.aspx" onclick="javascript:Track('|Eyebrow|ctl00_EyebrowMenu_EyebrowContainer|ctl00_EyebrowMenu_ctl02',this);">2003</a><span>&nbsp;&gt;&nbsp;</span><a id="ctl00_EyebrowMenu_ctl03" title="June" class="EyebrowLink" href="http://msdn.microsoft.com/en-us/magazine/cc135519.aspx" onclick="javascript:Track('|Eyebrow|ctl00_EyebrowMenu_EyebrowContainer|ctl00_EyebrowMenu_ctl03',this);">June</a><span>&nbsp;&gt;&nbsp;</span><span class="EyebrowElement">&nbsp;The XML Files: Advanced Type Mappings</span></div>
                                    <div class="Clear"> </div>
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%" style="width: 100%; table-layout: fixed;">
                                        <tr>
                                            <td style="vertical-align: top; width: auto;" valign="top">
                                                
                                                <div id="MainContent" style="width: 100%">
                                                    <span id="ctl00_altSelector"></span>
                                                            
                                                            <div class="topic"  >
                              <div>
                                        <div class="ColumnTypeTitle">XML Files</div>
                                        <div class="ColumnTypeSubTitle">Advanced Type Mappings</div>
                                        <div class="ColumnByLine">Aaron Skonnard</div>
                                        <br />
                                        <span class="CodeDownloadText">Code download available at:
  </span>
                                        <a href="http://download.microsoft.com/download/9/D/3/9D34806C-7708-459B-9170-EF11493AEF89/XMLFiles0306.exe">XMLFiles0306.exe</a>
                                        <span class="CodeDownloadText">
    (157 KB)
  </span>
                                        <br />
                                        <span>
                                                  <a id="ctl00_MTContentSelector1_mainContentContainer_ctl01" href="http://msdn.microsoft.com/en-us/magazine/cc164897.aspx" onclick="javascript:Track('ctl00_MTContentSelector1_mainContentContainer_ctl00|ctl00_MTContentSelector1_mainContentContainer_ctl01',this);">Browse the Code Online</a>
                                        </span>
                                        <div>
                                                  <br />
                                        </div>
                                        <div class="ArticleQA">Q Can XmlSerializer deal with choice compositors?</div>
                                        <div class="ArticleNormalPara">Q Can XmlSerializer deal with choice compositors?</div>
                                        <br />
                                        <div class="ArticleQA">A XmlSerializer can map XML Schema's sequence and all compositors quite logically to Microsoft® .NET Framework class definitions, but choice requires a bit of special attention. Xsd:choice indicates that a single choice of numerous particles is allowed at a given location within a complex type. For example, consider the XML Schema complex type definition shown in <strong>Figure 1</strong>. This definition states that an instance may contain one of three elements: commission, hourly, or salary, as illustrated here:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl02" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl02_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl02_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl02_code" space="preserve">
&lt;paymentMethod xmlns="http://example.org/xmlserializer"&gt;
   &lt;hourly&gt;7.50&lt;/hourly&gt;
&lt;/paymentMethod&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">A XmlSerializer can map XML Schema's sequence and all compositors quite logically to Microsoft® .NET Framework class definitions, but choice requires a bit of special attention. Xsd:choice indicates that a single choice of numerous particles is allowed at a given location within a complex type. For example, consider the XML Schema complex type definition shown in <strong>Figure 1</strong>. This definition states that an instance may contain one of three elements: commission, hourly, or salary, as illustrated here:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl03" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl03_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl03_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl03_code" space="preserve">
&lt;paymentMethod xmlns="http://example.org/xmlserializer"&gt;
   &lt;hourly&gt;7.50&lt;/hourly&gt;
&lt;/paymentMethod&gt;
</pre>
    </div>
</div>

</span></div>
                                        <span>
<div  class="MTPS_CollapsibleRegion">
<div  class="CollapseRegionLink"> <!-- ApplyClick with current id -->
<img  class='LibC_o' src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style='border-width:0px;vertical-align:middle;' />
&nbsp;Figure 1 XML Schema Complex Type Definition
</div>
<div class="MTPS_CollapsibleSection" style='display:block;' >  

                                                  <span id="ctl00_MTContentSelector1_mainContentContainer_ctl46_ctl00_ctl00" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl46_ctl00_ctl00_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl46_ctl00_ctl00_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl46_ctl00_ctl00_code" space="preserve">
&lt;xs:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   targetNamespace="http://example.org/xmlserializer"
   elementFormDefault="qualified"
&gt;
&lt;xs:complexType name="PaymentMethod"&gt;
   &lt;xs:choice&gt;
       &lt;xs:element name="commission" type="xs:double" /&gt;
       &lt;xs:element name="hourly" type="xs:double" /&gt;
       &lt;xs:element name="salary" type="xs:double" /&gt;
    &lt;/xs:choice&gt;
&lt;/xs:complexType&gt;
&lt;xs:element name="paymentMethod" type="PaymentMethod"/&gt;
•••
</pre>
    </div>
</div>

</span>
                                        
</div>
</div>
</span>
                                        <div class="ArticleNormalPara">Although this type of constraint is quite common in XML documents, it's not supported across many programming languages. It would be quite easy to map something like this to a language that supports C-style type unions since they define a structure that is a choice of several data members, as illustrated by the following:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl06" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl06_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl06_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl06_code" space="preserve">
union PaymentMethod
{
   double commission;
   double hourly;
   double salary;
};
PaymentMethod paymentMethod;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">However, since C# doesn't support unions it requires an out-of-band technique. If you run the aforementioned schema definition through xsd.exe (with the /classes switch), it generates a class like the one shown in <strong>Figure 2</strong>.</div>
                                        <span>
<div  class="MTPS_CollapsibleRegion">
<div  class="CollapseRegionLink"> <!-- ApplyClick with current id -->
<img  class='LibC_o' src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style='border-width:0px;vertical-align:middle;' />
&nbsp;Figure 2 PaymentMethod Class
</div>
<div class="MTPS_CollapsibleSection" style='display:block;' >  

                                                  <span id="ctl00_MTContentSelector1_mainContentContainer_ctl48_ctl00_ctl00" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl48_ctl00_ctl00_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl48_ctl00_ctl00_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl48_ctl00_ctl00_code" space="preserve">
using System.Xml.Serialization;
using System.Xml.Schema;
•••
public class PaymentMethod {
    
   [XmlElement("commission", typeof(System.Double))]
   [XmlElement("hourly", typeof(System.Double)]
   [XmlElement("salary", typeof(System.Double)]      
   [XmlChoiceIdentifier("ItemElementName")]
   public System.Double Item;
    
    [XmlIgnore]
    public ItemChoiceType1 ItemElementName;
}
</pre>
    </div>
</div>

</span>
                                        
</div>
</div>
</span>
                                        <div class="ArticleNormalPara">Notice that the PaymentMethod class only contains two members: Item and ItemElementName. The combination of these two elements represents an instance of the choice type. Since all three of the particle choices were declared as type xsd:double, the Item member is defined as type System.Double, which seems reasonable since that's the only possible type in this case.</div>
                                        <div class="ArticleNormalPara">The Item member is annotated with four attributes, three of type XmlElementAttribute and one of type XmlChoiceIdentifier. The XmlElementAttribute declarations specify the different name/type possibilities for the member when serialized. The XmlChoiceIdentifier attribute indicates that this particular member represents a choice compositor. However, simply looking at the value doesn't enable the serialization engine to unambiguously determine which element should be used. It needs a little bit more information. Hence, the XmlChoiceIdentifier specifies the name of another class member that contains the name of the actual element to use during serialization.</div>
                                        <div class="ArticleNormalPara">The ItemElementName member is of type ItemChoiceType, which is an enumeration type defined as follows:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl09" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl09_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl09_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl09_code" space="preserve">
•••
[XmlTypeAttribute(
  Namespace="http://example.org/xmlserializer",   
  IncludeInSchema=false)]
public enum ItemChoiceType {
    commission,
    hourly,
    salary,
}
•••
</pre>
    </div>
</div>

</span>
Notice that ItemChoiceType is marked with IncludeInSchema=false to prevent it from being exposed by xsd.exe, again, it's only used for dealing with the choice. So when you instantiate a new PaymentMethod object and assign the Item field a value, you also need to specify which member of the choice you're actually using. ItemElementName is annotated with XmlIgnoreAttribute, preventing it from being serialized into the instance by XmlSerializer. Again, it's simply there to help XmlSerializer figure out how to properly serialize the Item field. Check out the example that is shown in <strong>Figure 3</strong>.</div>
                                        <span>
<div  class="MTPS_CollapsibleRegion">
<div  class="CollapseRegionLink"> <!-- ApplyClick with current id -->
<img  class='LibC_o' src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style='border-width:0px;vertical-align:middle;' />
&nbsp;Figure 3 Serialize
</div>
<div class="MTPS_CollapsibleSection" style='display:block;' >  

                                                  <span id="ctl00_MTContentSelector1_mainContentContainer_ctl50_ctl00_ctl00" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl50_ctl00_ctl00_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl50_ctl00_ctl00_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl50_ctl00_ctl00_code" space="preserve">
using System;
using System.IO;
using System.Xml.Serialization;
•••
static void Serialize()
{
    PaymentMethod p = new PaymentMethod();
    p.Item = 7.5;
    // specify which member we're actually using
    p.ItemElementName = ItemChoiceType.hourly;

    XmlSerializer s = new XmlSerializer(typeof(PaymentMethod));
    FileStream fs = new FileStream("p.xml", FileMode.Create);
    s.Serialize(fs, p);
    fs.Close();
}
</pre>
    </div>
</div>

</span>
                                        
</div>
</div>
</span>
                                        <div class="ArticleNormalPara">The code in <strong>Figure 3</strong> generates an XML document named p.xml, which contains the following:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl12" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl12_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl12_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl12_code" space="preserve">
&lt;?xml version="1.0"?&gt;
&lt;paymentMethod xmlns="http://example.org/xmlserializer"&gt;
  &lt;hourly&gt;7.5&lt;/hourly&gt;
&lt;/paymentMethod&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">Then, of course, when you're deserializing PaymentMethod objects, you can inspect the ItemElementName field to figure out which choice particle was used in the instance document:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl13" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl13_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl13_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl13_code" space="preserve">
static void Deserialize()
{
    XmlSerializer s = new XmlSerializer(typeof(PaymentMethod));
    FileStream fs = new FileStream("p.xml", FileMode.Open);
    PaymentMethod p = (PaymentMethod)s.Deserialize(fs);
    fs.Close();

    Console.WriteLine("{0}: {1}", p.ItemElementName, p.Item);
}
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">This turns out to be quite handy when working with choices of different types. In the earlier example I showed, each particle was of type xsd:double. Suppose, however, that you extend it to contain an additional particle of a different type:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl14" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl14_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl14_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl14_code" space="preserve">
&lt;xs:complexType name="PaymentMethod"&gt;
   &lt;xs:choice&gt;
       &lt;xs:element name="commission" type="xs:double" /&gt;
       &lt;xs:element name="hourly" type="xs:double" /&gt;
       &lt;xs:element name="salary" type="xs:double" /&gt;
       &lt;xs:element name="other" type="xs:string" /&gt;
    &lt;/xs:choice&gt;
&lt;/xs:complexType&gt;
&lt;xs:element name="paymentMethod" type="PaymentMethod"/&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">If you regenerate the class definition using xsd.exe, you'll notice that the Item field is now declared as type object instead of a double, which makes sense since it can contain either a string or a double now. In situations like this, the ItemElementName method helps you figure out what type to expect in the Item field (see <strong>Figure 4</strong>).</div>
                                        <span>
<div  class="MTPS_CollapsibleRegion">
<div  class="CollapseRegionLink"> <!-- ApplyClick with current id -->
<img  class='LibC_o' src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style='border-width:0px;vertical-align:middle;' />
&nbsp;Figure 4 Deserialize
</div>
<div class="MTPS_CollapsibleSection" style='display:block;' >  

                                                  <span id="ctl00_MTContentSelector1_mainContentContainer_ctl54_ctl00_ctl00" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl54_ctl00_ctl00_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl54_ctl00_ctl00_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl54_ctl00_ctl00_code" space="preserve">
static void Deserialize()
{
    •••
    PaymentMethod p = (PaymentMethod)s.Deserialize(fs);
    switch(p.ItemElementName)
     {
       case ItemChoiceType.other:
          string items = (string)p.Item;
          •••
       default:
          double itemd = (double)p.Item;
          •••
      }
    •••
}
</pre>
    </div>
</div>

</span>
                                        
</div>
</div>
</span>
                                        <div class="ArticleNormalPara">One last issue I'll touch on is how to deal with repeating choices. For example, let's consider the slightly modified PaymentMethod complex type definition code that contains a repeating choice, as illustrated in the following:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl17" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl17_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl17_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl17_code" space="preserve">
&lt;xs:complexType name="PaymentMethod"&gt;
   &lt;xs:choice maxOccurs="unbounded"&gt;
       &lt;xs:element name="commission" type="xs:double" /&gt;
       &lt;xs:element name="hourly" type="xs:double" /&gt;
</pre>
    </div>
</div>

</span>
This means that a repeating list of any of the particles (listed within choice) may be used within an instance of this type. If you regenerate the class definition with this change in place, you'll notice that the only difference is that the Item and ItemElementName fields are declared as arrays:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl18" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl18_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl18_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl18_code" space="preserve">
public class PaymentMethod {
    
•••
[XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items;
    
    [XmlIgnore]
    public ItemsChoiceType[] ItemsElementName;
}
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">The fundamental method for dealing with choices remains the same. There is a separate object (in the Items array) for each instance of the choice and a corresponding ItemsChioceType value (in the ItemsElementname array) that indicates which particle was actually used. The arrays are associated with each other with respect to their index position.</div>
                                        <div class="ArticleNormalPara">As you can see, working with choices is more involved than dealing with the more common compositors, but it's workable if you understand the mapping and are willing to do a little extra work. You can download the complete sample illustrated here from the <em>MSDN</em>® <em>Magazine</em> Web site code page at the link at the top of this article.</div>
                                        <br />
                                        <div class="ArticleQA">Q Can XmlSerializer deal with mixed content models?</div>
                                        <div class="ArticleNormalPara">Q Can XmlSerializer deal with mixed content models?</div>
                                        <br />
                                        <div class="ArticleQA">A Yes, XmlSerializer can also handle mixed content models to a degree. A mixed content model allows a combination of text and elements. For example, consider the following complex type with a mixed content model:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl19" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl19_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl19_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl19_code" space="preserve">
    &lt;xs:complexType name="Employee" mixed="true"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="id" type="xs:string" /&gt;
            &lt;xs:element name="name" type="xs:string" /&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
    &lt;xs:element name="employee" type="EmployeeType"/&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">A Yes, XmlSerializer can also handle mixed content models to a degree. A mixed content model allows a combination of text and elements. For example, consider the following complex type with a mixed content model:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl20" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl20_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl20_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl20_code" space="preserve">
    &lt;xs:complexType name="Employee" mixed="true"&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name="id" type="xs:string" /&gt;
            &lt;xs:element name="name" type="xs:string" /&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
    &lt;xs:element name="employee" type="EmployeeType"/&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">The mixed="true" attribute states that an instance of this type may contain text nodes between the allowed elements. For example, the following document contains a valid instance of the Employee type defined in the previous XML snippet:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl21" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl21_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl21_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl21_code" space="preserve">
&lt;employee xmlns="http://example.org/xmlserializer"&gt;
  here is some text...
  &lt;id&gt;333-33-3333&lt;/id&gt;
  here is some more...
  &lt;name&gt;Bob Smith&lt;/name&gt;
  and here is even more...
&lt;/employee&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">As with choice compositors, this type of XML structure doesn't map naturally to .NET Framework class definitions, but XmlSerializer does its best to deal with it. Running xsd.exe against the schema file generates the following class definition that attempts to handle mixed content:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl22" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl22_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl22_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl22_code" space="preserve">
public class EmployeeType {
    public string id;
    public string name;
    [XmlText]
    public string[] Text;
}
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">Notice that the element declarations map naturally to the id and name fields, but what about the extra text that may interleave with the elements? The only way to handle this is to provide a single bucket for holding all of the interleaving text nodes. That's the purpose of the Text field of type string[]. This field is annotated with XmlTextAttribute, indicating that it will contain the extra text nodes found within the document during deserialization. Note that you can only apply the XmlTextAttribute attribute to a single member of a class.</div>
                                        <div class="ArticleNormalPara">Interleaving text nodes encountered during deserialization are simply added to this array. For example, consider the deserialization code shown in this snippet:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl23" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl23_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl23_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl23_code" space="preserve">
XmlSerializer s2 = new XmlSerializer(typeof(Employee));
FileStream fs2 = 
   new FileStream("employee.xml", FileMode.Open);
Employee e = (Employee)s2.Deserialize(fs2);
Console.WriteLine("id: {0}, name: {1}", e.id, e.name);
foreach (string t in e.Text)
    Console.WriteLine(t);
</pre>
    </div>
</div>

</span>
Running the mixed content example through the previous code produces the following console output:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl24" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl24_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl24_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl24_code" space="preserve">
id: 333-33-3333, name: Bob Smith
here is some text...
here is some more...
and here is even more... 
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">As you can see, XmlSerializer enables you to get your hands on the interleaving text nodes, but there's no way to know exactly where they appeared in the original XML document. In many scenarios this can be a major drawback since the position of the text plays an important role in applications that commonly leverage mixed content models, such as document-oriented content management systems.</div>
                                        <div class="ArticleNormalPara">There are many XML structures that are perfectly reasonable in XML Schema but don't make much sense in the world of the .NET Framework (like choices or mixed content models). So if you're designing a system that relies heavily on the use of mixed content models, you're better off avoiding XmlSerializer altogether. Instead, you should use something like XSLT, which is well suited for processing document-oriented structures. You can download the complete sample from the <em>MSDN Magazine</em> Web site.</div>
                                        <br />
                                        <div class="ArticleQA">Q When using XmlSerializer, is it possible to force the value of a field to show up as the content of an XML element?</div>
                                        <div class="ArticleNormalPara">Q When using XmlSerializer, is it possible to force the value of a field to show up as the content of an XML element?</div>
                                        <br />
                                        <div class="ArticleQA">A Yes, through the XmlTextAttribute technique described in the previous question. For example, assume you have the following C# class definition
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl25" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl25_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl25_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl25_code" space="preserve">
public class Employee 
{
    public string id;
    public string name;    
}
</pre>
    </div>
</div>

</span>
and you want to map it to the following XML document, where the id field maps to an XML attribute and the name field maps to the content of the element:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl26" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl26_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl26_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl26_code" space="preserve">
&lt;Employee id="333-33-3333" xmlns="http://example.org/
    xmlserializer"&gt;Bob Smith&lt;/Employee&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">A Yes, through the XmlTextAttribute technique described in the previous question. For example, assume you have the following C# class definition
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl27" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl27_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl27_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl27_code" space="preserve">
public class Employee 
{
    public string id;
    public string name;    
}
</pre>
    </div>
</div>

</span>
and you want to map it to the following XML document, where the id field maps to an XML attribute and the name field maps to the content of the element:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl28" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl28_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl28_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl28_code" space="preserve">
&lt;Employee id="333-33-3333" xmlns="http://example.org/
    xmlserializer"&gt;Bob Smith&lt;/Employee&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">To accomplish this you need to annotate the name field with XmlTextAttribute and the id field with XmlAttributeAttribute, as shown here:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl29" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl29_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl29_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl29_code" space="preserve">
public class Employee 
{
    [XmlAttribute]
    public string id;
    [XmlText]
    public string name;    
}
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">If you run the compiled assembly through xsd.exe to generate a schema definition for this class, it produces a complex type that derives by extension from xsd:string in order to attach some attributes to the value:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl30" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl30_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl30_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl30_code" space="preserve">
&lt;xs:complexType name="Employee"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
        &lt;xs:attribute name="id" type="xs:string" /&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">This type definition basically states that the instance element will have an id attribute and a string value as its content. The infrastructure didn't define it as a mixed content model, like in the XmlTextAttribute examples from the previous question, because in this case the element's content is of the text-only variety. Had I included another field that wasn't mapped to an attribute, however, it would have had to create a complex type with a mixed content model like before.</div>
                                        <br />
                                        <div class="ArticleQA">Q I've noticed that XmlSerializer won't serialize objects that implement IDictionary by default. Is there any way around this?</div>
                                        <div class="ArticleNormalPara">Q I've noticed that XmlSerializer won't serialize objects that implement IDictionary by default. Is there any way around this?</div>
                                        <br />
                                        <div class="ArticleQA">A Unfortunately there's no way to make XmlSerializer function with IDictionary-derived objects since the infrastructure explicitly checks for IDictionary at run time and disables serialization. One way around this is to write a new class that wraps an IDictionary object and copies the values into an array of serializable objects. The XmlSerializer framework also has a hidden hook for writing custom serialization code. To take advantage of this hook you can implement an interface called IXmlSerializable for the object you want to serialize/deserialize.</div>
                                        <div class="ArticleNormalPara">A Unfortunately there's no way to make XmlSerializer function with IDictionary-derived objects since the infrastructure explicitly checks for IDictionary at run time and disables serialization. One way around this is to write a new class that wraps an IDictionary object and copies the values into an array of serializable objects. The XmlSerializer framework also has a hidden hook for writing custom serialization code. To take advantage of this hook you can implement an interface called IXmlSerializable for the object you want to serialize/deserialize.</div>
                                        <div class="ArticleNormalPara">When you instantiate an XmlSerializer object, the constructor usually generates a temporary assembly containing XmlReader and XmlWriter code for moving between object instances and XML documents. Before doing this, however, it first checks to see if the supplied type derives from IXmlSerializable and if so, it generates code to call into the IXmlSerializable members instead. In other words, if you implement IXmlSerializable, you completely bypass the automatic serialization process and have the opportunity to provide your own.</div>
                                        <div class="ArticleNormalPara">IXmlSerializable is covered in the official documentation, but the documentation states it's not intended for public use and provides no information beyond that. This indicates that the development team wanted to reserve the right to modify, disable, or even completely remove this extensibility hook down the road. However, as long as you're willing to accept this uncertainty and deal with possible changes in the future, there's no reason whatsoever you can't take advantage of it.</div>
                                        <div class="ArticleNormalPara">Let's walk through a complete example of custom serialization to illustrate how it all fits together. To begin, here's what the interface looks like:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl31" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl31_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl31_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl31_code" space="preserve">
interface IXmlSerializable
{
    XmlSchema GetSchema();
    void ReadXml(XmlReader reader);
    void WriteXml(XmlWriter writer);
}
</pre>
    </div>
</div>

</span>
ReadXml is called during deserialization, whereas WriteXml is called during serialization. The GetSchema method is called when the XML Schema is exported (either by using xsd.exe or via the .asmx WSDL generation process). To implement a class capable of serializing any IDictionary-derived object, you need to define a new class that implements IXmlSerializable and also wraps an IDictionary object, as illustrated in <strong>Figure 5</strong>.</div>
                                        <span>
<div  class="MTPS_CollapsibleRegion">
<div  class="CollapseRegionLink"> <!-- ApplyClick with current id -->
<img  class='LibC_o' src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style='border-width:0px;vertical-align:middle;' />
&nbsp;Figure 5 IXmlSerializable Implementation
</div>
<div class="MTPS_CollapsibleSection" style='display:block;' >  

                                                  <span id="ctl00_MTContentSelector1_mainContentContainer_ctl70_ctl00_ctl00" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl70_ctl00_ctl00_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl70_ctl00_ctl00_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl70_ctl00_ctl00_code" space="preserve">
public class DictionarySerializer : IXmlSerializable
{
    const string NS = "http://www.develop.com/xml/serialization";

    public IDictionary dictionary;

    public DictionarySerializer() 
    {
        dictionary = new Hashtable();
    }
    public DictionarySerializer(IDictionary dictionary)
    {
        this.dictionary = dictionary;
    }

    public void WriteXml(XmlWriter w)
    {
        w.WriteStartElement("dictionary", NS);
        foreach (object key in dictionary.Keys)
        {
            object value = dictionary[key];
            w.WriteStartElement("item", NS);
            w.WriteElementString("key", NS, key.ToString());
            w.WriteElementString("value", NS, value.ToString());
            w.WriteEndElement();
        }
        w.WriteEndElement();
    }

    public void ReadXml(XmlReader r)
    {
        r.Read(); // move past container
        r.ReadStartElement("dictionary");
        while (r.NodeType != XmlNodeType.EndElement)
        {            
            r.ReadStartElement("item", NS);
            string key = r.ReadElementString("key", NS);
            string value = r.ReadElementString("value", NS);
            r.ReadEndElement();
            r.MoveToContent();
            dictionary.Add(key, value);
        }
    }
    public System.Xml.Schema.XmlSchema GetSchema()
    {
        return LoadSchema();
    }
    •••
}
</pre>
    </div>
</div>

</span>
                                        
</div>
</div>
</span>
                                        <div class="ArticleNormalPara">The WriteXml method generates an XML document capable of representing any dictionary object in the following form:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl34" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl34_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl34_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl34_code" space="preserve">
&lt;dictionary 
    xmlns="http://www.develop.com/xml/serialization"&gt;
    &lt;item&gt;
      &lt;key&gt;5&lt;/key&gt;
      &lt;value&gt;Nathan&lt;/value&gt;
    &lt;/item&gt;
    &lt;item&gt;
      &lt;key&gt;4&lt;/key&gt;
      &lt;value&gt;Michael&lt;/value&gt;
    &lt;/item&gt;
    •••
&lt;/dictionary&gt;
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">The ReadXml method contains the necessary code for reading these documents and then converting the document back into a dictionary object form.</div>
                                        <div class="ArticleNormalPara">The following code illustrates how to serialize and deserialize a DictionarySerializer using XmlSerializer:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl35" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl35_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl35_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl35_code" space="preserve">
void Serialize(IDictionary d, Stream s)
{
  DictionarySerializer ds = new DictionarySerializer(d);
  XmlSerializer xs = new XmlSerializer(typeof(DictionarySerializer));
  xs.Serialize(s, ds);
}

IDictionary Deserialize(Stream s)
{
  XmlSerializer xs = new XmlSerializer(typeof(DictionarySerializer));
  return xs.Deserialize(s);
}
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">With this in place, it's now possible to serialize anything that derives from IDictionary such as Hashtable, SortedList, ListDictionary, or HybridDictionary, as shown in <strong>Figure 6</strong>.</div>
                                        <span>
<div  class="MTPS_CollapsibleRegion">
<div  class="CollapseRegionLink"> <!-- ApplyClick with current id -->
<img  class='LibC_o' src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style='border-width:0px;vertical-align:middle;' />
&nbsp;Figure 6 IDictionary Serialization
</div>
<div class="MTPS_CollapsibleSection" style='display:block;' >  

                                                  <span id="ctl00_MTContentSelector1_mainContentContainer_ctl73_ctl00_ctl00" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl73_ctl00_ctl00_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl73_ctl00_ctl00_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl73_ctl00_ctl00_code" space="preserve">
// serialize a Hashtable
FileStream fs = new FileStream("ht.xml", FileMode.Create);
Hashtable ht = new Hashtable();
ht.Add(1, "Aaron");
... // fill Hashtable
Serialize(ht, fs);
fs.Close();

// serialize a SortedList
FileStream fs2 = new FileStream("sl.xml", FileMode.Create);
SortedList sl = new SortedList();
sl.Add(1, "Aaron");
... // fill SortedList
Serialize(sl, fs2);
fs2.Close();

•••
// deserialize a Hashtable
FileStream fs3 = new FileStream("ht.xml", FileMode.Open);
Hashtable hash = Deserialize(fs3);
•••
</pre>
    </div>
</div>

</span>
                                        
</div>
</div>
</span>
                                        <div class="ArticleNormalPara">Since the WebMethod framework also uses the XmlSerializer plumbing, it's now possible to return DictionarySerializer objects from WebMethods. For example, let's consider the WebMethod that returns a Hashtable through a DictionarySerializer wrapper as shown in the following code:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl38" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl38_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl38_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl38_code" space="preserve">
[WebMethod]
public DictionarySerializer GetHashTable()
{
    Hashtable ht = new Hashtable();
    ht.Add(1, "Aaron");
    ht.Add(2, "Monica");
    ht.Add(3, "Michelle");
    return new DictionarySerializer (h1);
}
</pre>
    </div>
</div>

</span>
If you execute this operation, the SOAP response looks something like the code shown here:
<span id="ctl00_MTContentSelector1_mainContentContainer_ctl39" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl39_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl39_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl39_code" space="preserve">
&lt;soap:Envelope 
  xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;
  &lt;soap:Body&gt;
    &lt;GetHashTableResponse 
    xmlns="http://www.develop.com/xml/serialization/example"&gt;
      &lt;GetHashTableResult&gt;
        &lt;dictionary 
         xmlns="http://www.develop.com/xml/serialization"&gt;
          &lt;item&gt;
            &lt;key&gt;1&lt;/key&gt;
            &lt;value&gt;Aaron&lt;/value&gt;
          &lt;/item&gt;
•••
</pre>
    </div>
</div>

</span></div>
                                        <div class="ArticleNormalPara">As you can see, I was able to customize the serialization process by simply implementing IXmlSerializable's ReadXml/WriteXml members. The last thing I need to do is customize the schema generation functionality so that clients know what to expect ahead of time. The framework typically generates the schema automatically, but since I've customized the serialization process, only I know what the schema should look like. Hence, the infrastructure will call GetSchema to retrieve the appropriate schema from my code at run time. As long as I implement this correctly, clients will have access to everything they need through the normal schema generation hooks.</div>
                                        <div class="ArticleNormalPara">In my implementation of GetSchema, I returned an XML Schema definition loaded into a System.Xml.Schema.XmlSchema object (see <strong>Figure 7</strong>). You'll see these definitions if you use xsd.exe to export the schema from the assembly or if you browse to the .asmx file and inspect the documentation. Notice that even the documentation page for GetHashtable illustrates exactly what the client should expect to receive now (see <strong>Figure 8</strong>).</div>
                                        <span>
<div  class="MTPS_CollapsibleRegion">
<div  class="CollapseRegionLink"> <!-- ApplyClick with current id -->
<img  class='LibC_o' src="http://i.msdn.microsoft.com/Global/Images/clear.gif" style='border-width:0px;vertical-align:middle;' />
&nbsp;Figure 7 GetSchema
</div>
<div class="MTPS_CollapsibleSection" style='display:block;' >  

                                                  <span id="ctl00_MTContentSelector1_mainContentContainer_ctl76_ctl00_ctl00" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<div class='libCScode'
id="ctl00_MTContentSelector1_mainContentContainer_ctl76_ctl00_ctl00_">
    
    <div class="CodeSnippetTitleBar">
        <div class="CodeDisplayLanguage">
            
        </div>
        
        <div class="CopyCodeButton">
            <a class="copyCode"
             title="Copy Code" 
             href="javascript:CopyCode('ctl00_MTContentSelector1_mainContentContainer_ctl76_ctl00_ctl00_code');">
                <div style="border: 0px; height: 9px; width: auto" align="center" class="LibC_copy_off"></div>
                Copy Code
             </a>
        </div>   
        
    </div>
    <div dir="ltr" style="background-color: #ddd">
    <pre class="libCScode" id="ctl00_MTContentSelector1_mainContentContainer_ctl76_ctl00_ctl00_code" space="preserve">
&lt;s:schema elementFormDefault="qualified" 
  targetNamespace="http://www.develop.com/xml/serialization"
  xmlns:tns="http://www.develop.com/xml/serialization"
&gt;
  &lt;s:complexType name="DictionaryType"&gt;
    &lt;s:sequence&gt;
      &lt;s:element maxOccurs="unbounded" name="item" 
        type="tns:ItemType" /&gt;
    &lt;/s:sequence&gt;
  &lt;/s:complexType&gt;
  &lt;s:complexType name="ItemType"&gt;
    &lt;s:sequence&gt;
      &lt;s:element name="key" type="s:string" /&gt;
      &lt;s:element name="value" type="s:string" /&gt;
    &lt;/s:sequence&gt;
  &lt;/s:complexType&gt;
  &lt;s:element name="dictionary" type="tns:DictionaryType" /&gt;
&lt;/s:schema&gt;
</pre>
    </div>
</div>

</span>
                                        
</div>
</div>
</span>
                                        <div class="ArticleImageSpacer">
                                                  <img alt="" src="http://i.msdn.microsoft.com/cc164135.fig08(en-us).gif" />
                                                  <div class="ArticleImageCaptionText">Figure 8<strong> GetHashtable </strong></div>
                                        </div>
                                        <div class="ArticleNormalPara">You can download a complete example from the <em>MSDN Magazine</em> Web page I cited earlier. Remember, this is an unsupported and undocumented area of the .NET Framework that may change in the future.
</div>
                                        <br />
                                        <p class="clsGloss">Send your questions and comments for Aaron to  <a href="mailto:xmlfiles@microsoft.com">xmlfiles@microsoft.com</a>.
</p>
                                        <br />
                                        <div class="ContentSeparator" ></div>
                                        <div class="AuthorBio">
                                                  <strong>Aaron Skonnard</strong> is an instructor/researcher at DevelopMentor, where he develops the XML and Web Service-related curriculum. Aaron coauthored <em>Essential XML Quick Reference</em> (Addison-Wesley, 2001) and <em>Essential XML</em> (Addison-Wesley, 2000). Reach him at <a href="http://staff.develop.com/aarons/">http://staff.develop.com/aarons</a>.</div>
                                        <br />
                                        <div id="bottom" ></div>
                              </div>
                    </div>
                                                        
                                                </div>
                                                <div class="FeatureSmallHeadWithLogo">&nbsp;</div>
                                            </td>
                                            <td style="width: 303px; vertical-align: top; padding-left: 3px;" valign="top">
                                                <div id="RightContent">
                                                    <div id="ctl00_RightSideBox">
	<p:primary pcat:primaryFormat="Mtps.Xhtml"   xmlns:asp="http://msdn2.microsoft.com/aspnet" xmlns:pcat="urn:mtpg-com:mtps/2004/1/primary/category" xmlns:p="urn:mtpg-com:mtps/2004/1/primary"><div class="navpage"><div style="margin-bottom:10px;"><iframe frameborder="0" height="250" id="a481673b" name="a481673b" scrolling="no" src="http://d.101m3.com/afr.php?zoneid=2&amp;cb=INSERT_RANDOM_NUMBER_HERE" width="300"><a id="ctl00_ctl13" href="http://d.101m3.com/ck.php?n=ab6e91f4&cb=INSERT_RANDOM_NUMBER_HERE" target="_blank" onclick="javascript:Track('ctl00_ctl12|ctl00_ctl13',this);"><img alt="" border="0" src="http://d.101m3.com/avw.php?zoneid=2&amp;cb=INSERT_RANDOM_NUMBER_HERE&amp;n=ab6e91f4" /></a></iframe></div><div style="margin-bottom:10px;"><iframe frameborder="0" height="250" id="a40c7633" name="a40c7633" scrolling="no" src="http://d.101m3.com/afr.php?zoneid=3&amp;cb=INSERT_RANDOM_NUMBER_HERE" width="300"><a id="ctl00_ctl14" href="http://d.101m3.com/ck.php?n=a594a72f&cb=INSERT_RANDOM_NUMBER_HERE" target="_blank" onclick="javascript:Track('ctl00_ctl12|ctl00_ctl14',this);"><img alt="" border="0" src="http://d.101m3.com/avw.php?zoneid=3&amp;cb=INSERT_RANDOM_NUMBER_HERE&amp;n=a594a72f" /></a></iframe></div><div style="border-width:5px;border-color:black;border-style:solid;"><div style="margin-left:5px; margin-right:5px;"><h3><a id="ctl00_ctl15" href="http://blogs.msdn.com/msdnmagazine/" onclick="javascript:Track('ctl00_ctl12|ctl00_ctl15',this);">MSDN Magazine Blog</a></h3><p><!-- RSSURL : http://blogs.msdn.com/msdnmagazine/rss.xml | RSS GUID : 44CFFA5F-CCC2-14A2-2403-529DE793E787 --><div id="ctl00_ctl16_MtpsFeedViewerBasicPanelWebSlice" class="hslice">
		
	<p id="ctl00_ctl16_titlediv" class="entry-title"></p>
	<div class="entry-content">
			
		<div id="ctl00_ctl16_MtpsFeedViewerBasicPanel" Class="MtpsFeedViewerBasicRootPanelClass">
				
			<div id="ctl00_ctl16_MtpsFeedViewerBasicHeaderPanel" Class="MtpsFeedViewerBasicHeaderStylePanel">
					
			
				</div>
		<div class="ColumnDiv">
					<div id="ctl00_ctl16_ctl02" class="BasicHeadlinesItemPanelCssClass" style="width:99%;">
						<a id="ctl00_ctl16_ctl03" title="MSDN Library: More Windows Phone 7 Guidance" class="BasicHeadlinesTitleBold" href="http://blogs.msdn.com/b/msdnmagazine/archive/2011/11/18/10238576.aspx" onclick="javascript:Track('ctl00_ctl16_ctl02|ctl00_ctl16_ctl03',this);">MSDN Library: More Windows Phone 7 Guidance</a><br/><span class="BasicHeadlinesDescLabelCssClass">Last week I mentioned that the MSDN Libraries had posted a few new articles focused on Windows Phone 7 application and game development. Well, there a... </span><a id="ctl00_ctl16_ctl06" title="MSDN Library: More Windows Phone 7 Guidance" href="http://blogs.msdn.com/b/msdnmagazine/archive/2011/11/18/10238576.aspx" onclick="javascript:Track('ctl00_ctl16_ctl02|ctl00_ctl16_ctl06',this);">More...</a><br/><span class="FVBPubDateLabel">Friday, Nov 18</span>
					</div>
				</div><div class="ColumnDiv">
					<div id="ctl00_ctl16_ctl10" class="BasicHeadlinesItemPanelCssClass" style="width:99%;">
						<a id="ctl00_ctl16_ctl11" title="New Windows Phone 7 Content on MSDN Library" class="BasicHeadlinesTitleBold" href="http://blogs.msdn.com/b/msdnmagazine/archive/2011/11/14/10236943.aspx" onclick="javascript:Track('ctl00_ctl16_ctl10|ctl00_ctl16_ctl11',this);">New Windows Phone 7 Content on MSDN Library</a><br/><span class="BasicHeadlinesDescLabelCssClass">Don't look now, but the MSDN Library features new content focused on Windows Phone 7 application and game development.
Leading things off is an articl... </span><a id="ctl00_ctl16_ctl14" title="New Windows Phone 7 Content on MSDN Library" href="http://blogs.msdn.com/b/msdnmagazine/archive/2011/11/14/10236943.aspx" onclick="javascript:Track('ctl00_ctl16_ctl10|ctl00_ctl16_ctl14',this);">More...</a><br/><span class="FVBPubDateLabel">Monday, Nov 14</span>
					</div>
				</div><div class="EmptyPanel">

				</div>
			</div>
	
		</div>

	</div></p><p><a id="ctl00_ctl17" href="http://blogs.msdn.com/msdnmagazine/" onclick="javascript:Track('ctl00_ctl12|ctl00_ctl17',this);">More MSDN Magazine Blog entries &gt;</a></p></div><div style="margin-left:5px; margin-right:5px; background-color:#5b6871;height:12px"><!--PublishThis!: An empty tag was encountered. This comment was inserted to prevent a self-closing tag.--></div><div style="margin-left:5px; margin-right:5px;"><p><br /></p><div style="text-align:left;font-family:Segoe UI;font-size:12pt;">Current Issue</div><div style="text-align:center;display:block;height:260px"><p><a id="ctl00_ctl18" href="hh547094.aspx" onclick="javascript:Track('ctl00_ctl12|ctl00_ctl18',this);"><br /><img align="Middle" alt="November 2011" height="239" src="http://i.msdn.microsoft.com/hh547094.cover_lrg(en-us,MSDN.10).png" title="November 2011" width="178" /></a></p></div><div style="text-align:right;"><p><a id="ctl00_ctl19" href="ee310108.aspx" onclick="javascript:Track('ctl00_ctl12|ctl00_ctl19',this);">Browse All MSDN Magazines</a><br /></p></div><div style="background-color:#5b6871;height:12px"><!--PublishThis!: An empty tag was encountered. This comment was inserted to prevent a self-closing tag.--></div></div><div style="margin-left:5px; margin-right:5px;"><div style="text-align:Right;font-family:Segoe UI;font-size:12pt;"><p><br /><a id="ctl00_ctl20" href="http://msdn.microsoft.com/en-US/aa570311.aspx?ocid=msdn_magazine" onclick="javascript:Track('ctl00_ctl12|ctl00_ctl20',this);"><img align="Left" alt="Subscribe to the MSDN Flash newsletter" src="http://i.msdn.microsoft.com/dd799403.MSDN_Newsletter(en-us,MSDN.10).png" title="Subscribe to the MSDN Flash newsletter" /> Subscribe to MSDN Flash newsletter</a></p></div><div style="text-align:left;"><p><br />Receive the MSDN Flash e-mail newsletter every other week, with news and information personalized to your interests and areas of focus.</p></div></div></div></div></p:primary>
</div>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                    <div id="ctl00_FooterAd" class="MsdnPage_ContentInclude" align="center"><div>
	<div>
		<div class="navpage" ><p> </p><div><iframe frameborder="0" height="90" id="a6c80938" name="a6c80938" scrolling="no" src="http://d.101m3.com/afr.php?zoneid=4&amp;cb=INSERT_RANDOM_NUMBER_HERE" width="728"><a id="ctl00_ctl29" href="http://d.101m3.com/ck.php?n=a5bdce73&cb=INSERT_RANDOM_NUMBER_HERE" target="_blank" onclick="javascript:Track('ctl00_ctl28|ctl00_ctl29',this);"><img alt="" border="0" src="http://d.101m3.com/avw.php?zoneid=4&amp;cb=INSERT_RANDOM_NUMBER_HERE&amp;n=a5bdce73" /></a></iframe></div></div>
	</div>
</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="Clearbottom"> </div>
                        <div class="bottomleftcorner"> </div>
                        <div class="bottomrightcorner"> </div>
                        <div id="Footer">
                            

<div class="FooterLinks">
    <div id="ctl00_Footer1_SiteLinks">

</div>
    <span id="ctl00_Footer1_Copyright" title="© 2011  Microsoft. All rights reserved." class="FooterCopyright">&copy; 2011  Microsoft. All rights reserved.</span>
    <a id="ctl00_Footer1_Terms" title="Terms of Use" href="/cc300389.aspx">Terms of Use</a>
    <span class="Pipe">|</span>
    <a id="ctl00_Footer1_Trademarks" title="Trademarks" href="http://www.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</a>
    <span class="Pipe">|</span>
    <a id="ctl00_Footer1_PrivacyStatement" title="Privacy Statement" href="http://www.microsoft.com/info/privacy.mspx">Privacy Statement</a>
    <span id="ctl00_Footer1_PipeSpan3" class="Pipe">|</span>
    <a id="ctl00_Footer1_Feedback" title="Site Feedback" rel="sitefeedback" targetUrl="https://lab.msdn.microsoft.com/mailform/contactus.aspx?refurl=http://msdn.microsoft.com/en-us/magazine/cc164135.aspx&amp;loc=en-us" href="https://lab.msdn.microsoft.com/mailform/contactus.aspx?refurl=http://msdn.microsoft.com/en-us/magazine/cc164135.aspx&amp;loc=en-us" target="_blank">Site Feedback</a>
</div>

                        </div>
                    
                </div>
            </div>
        </div>
    </div>
    <div style="display:none"><img src="http://c.microsoft.com/trans_pixel.asp?source=msdn&amp;TYPE=PV&amp;uri=%2fen-us%2fmagazine(d%3ddefault)%2fcc164135(l%3den-us%2cv%3dMSDN.10).aspx&amp;p=_en-us_magazine(d=default)_cc164135(l=en-us,v=MSDN.10).aspx&amp;r=http%3a%2f%2fwww.google.com%2furl%3fsa%3dt%26rct%3dj%26q%3dMSDN%2bmagazine%2bXML%2bxmlfiles0306%26source%3dweb%26cd%3d1%26ved%3d0CBoQFjAA%26url%3dhttp%3a%2f%2fmsdn.microsoft.com%2fen-us%2fmagazine%2fcc164135.aspx%26ei%3dxHDKTqzWGJHQsgbb3dCOBw%26usg%3dAFQjCNF3T_p-M1kM2DGiY37mZBndahU5kQ" width="0" height="0" hspace="0" vspace="0" border="0" alt="Page view tracker" /></div>
    
<script src="http://i2.msdn.microsoft.com/Platform/Controls/WebTrends/resources/webtrendsscript-bn1651.js" type="text/javascript"></script>
<noscript>
<div><img alt="DCSIMG" id="Img1" width="1" height="1" src="http://m.webtrends.com/dcsmgru7m99k7mqmgrhudo0k8_8c6m/njs.gif?dcsuri=/nojavascript&amp;WT.js=No" /></div>
</noscript>
    <script type="text/javascript" src="http://i2.msdn.microsoft.com/en-us/magazine/mtps-bn1651.js?l=en-us&amp;i=magazine&amp;ct=AlternateSelector;CCEditor;CCSection;CCTagEditor;CodeSnippet;CollapsibleArea;ContentFallback;EyebrowSimple;FeedViewerBasic;InstrumentedLink;InteractiveToolbar;MtpsRating;MtViewDropDown;Omniture;RedVelvetCodeSnippet;RedVelvetCollapsibleArea;RedVelvetInstrumentedLink;StoFooter;StoLocaleManagementFlyout;StoMastheadMSDN;StoMtpsLoginStatus;StoProfileLink;StoSearch;StoTabStrip;SurveyLauncher;TemplatedFlyout;TransWikiPopupEditor;WebMetrix;WebTrends"></script>
    

<script type="text/javascript">
//<![CDATA[
 RegisterAutoSubmit('ctl00_tb1_Flyout_Rating1','ctl00_tb1_Flyout_btnSend','contentRatingcc164135MSDN.10en-us');
//]]>
</script>
</form>
</body>

<script language="javascript" type="text/javascript" src="http://js.microsoft.com/library/svy/sto/broker.js"></script>
</html>
